digraph G {
  # dot -Tsvg file.gv -o file.svg | kitty icat file.svg
  rankdir=LR
  newrank=true
  nodesep=0.7
  ranksep=0
  fontname="Helvetica,Arial,sans-serif"
  #splines=false
  node [shape=box, style=filled, penwidth=0, fontname="Helvetica,Arial,sans-serif"];
  edge [color="#4d5c60", fontname="Helvetica,Arial,sans-serif"];

  subgraph cluster_actions {
    penwidth=0
    node [fillcolor="#c2d9d1", fontcolor="#0d1445"]

    ingesta [label="Ingesta" labelloc="top" image="imgs/ssh.png" width=1 height=1.5 fixedsize=true imagescale=true];
    extrac [label="Extracción" labelloc="top" image="imgs/pyspark.png" width=1.5 height=0.8 fixedsize=true];
    modelo_clas [label="Modelo dominios" labelloc="top" margin=0.20 image="imgs/pyspark.png" width=1.5 height=1 fixedsize=true imagescale=true];
    asignar_dom [label="Asignar dominio" labelloc="top" margin=0.13 image="imgs/pyspark.png" width=1.5 height=1 fixedsize=true imagescale=true];
    modelo_anomal [label="Modelo anomalías" labelloc="top" image="imgs/scalaspark.png" width=2 height=1.3 fixedsize=true imagescale=true]
    detect [label="Detectar anomalías" labelloc="top" image="imgs/scalaspark.png" width=2 height=1.3 fixedsize=true imagescale=true]
    analy [label="Motor analítico" labelloc="top" image="imgs/elastic_search.png" width=2 height=1.5 fixedsize=true imagescale=true]
    viz [label="Visualización" labelloc="top" image="imgs/kibana.png" width=1.5 height=1.5 fixedsize=true imagescale=true]
  }

  subgraph cluster_store {
    penwidth=0
    bgcolor="#e0d6d9";
    label="Almacenamiento"
    fontcolor="#933643"
    labelloc="bottom"

    clust_img [label="" fillcolor="#e0d6d9" shape=rect, width=2, height=0.5, style=filled, image="imgs/minio.png", fixedsize=true]

    node [fillcolor="#374375", fontcolor="#fffcf5"]

    no_estrct [label="Datos\nno estruct", margin=0.15];
    estruct [label="Datos\nestructurados", margin=0.15];
    
    subgraph cluster_model_class {
      penwidth=1
      bgcolor = white;
      label="Modelo para clasificar dominios"
      fontcolor="#0d1445" 
      labelloc="bottom"

      classif [
      label=<
        <table border="1" color="white" cellspacing="10">
          <tr><td>Encoder 1</td><td>Indexer 1</td><td>RegLog 1</td></tr>
          <tr><td>Encoder 2</td><td>Indexer 2</td><td>RegLog 2</td></tr>
          <tr><td>Encoder N</td><td>Indexer N</td><td>RegLog N</td></tr>
        </table>
      >]; 

    }

    ground_t [label="Datos\nground truth", margin=0.20];

    subgraph cluster_iforest {
      penwidth=1
      bgcolor= white;
      label="Modelo detección anomalías"
      fontcolor="#0d1445"
      labelloc="bottom"

      iforest[
      style=filled
      margin=0
      label=<
        <table border="1" color="white" cellspacing="0">
          <tr><td>iForest 1</td><td>iForest 2</td></tr>
          <tr><td>iForest 3</td><td>iForest N</td></tr>
        </table>
      >]; 
    }

    anoms [
      style=filled
      margin=0
      label=<
        <table border="1" color="white" cellspacing="0">
        <tr><td>Anom Dom 1</td><td>Anom Dom 2</td></tr>
        <tr><td>Anom Dom 3</td><td>Anom Dom N</td></tr>
      </table>
      >
    ];
    
    iforest
    anoms 

  }

  ingesta -> extrac -> modelo_clas -> asignar_dom -> modelo_anomal -> detect -> analy ->viz [style=invis];

  no_estrct -> estruct -> ground_t -> iforest -> anoms [style=invis]

  ingesta -> no_estrct;
  no_estrct -> extrac;
  extrac -> estruct;
  estruct -> modelo_clas [label="Dominio!=otro" color="#0d1445" fontcolor="#0d1445"];
  estruct -> asignar_dom [headlabel="Dominio==otro" labeldistance=10.0 color=darkgreen fontcolor=darkgreen];
  estruct -> ground_t [taillabel="Dominio!=otro" labeldistance=7 color="#0d1445" fontcolor="#0d1445"]
  modelo_clas -> classif;
  classif -> asignar_dom;
  asignar_dom -> ground_t;
  ground_t -> modelo_anomal;
  modelo_anomal -> iforest;
  iforest -> detect;
  detect -> anoms;
  anoms -> analy;
  analy -> viz;

  {rank=same; ingesta; no_estrct;}
  {rank=same; extrac; estruct;}
  {rank=same; modelo_clas; classif;}
  {rank=same; asignar_dom; ground_t;}
  {rank=same; modelo_anomal; iforest;}
  {rank=same; detect; anoms}
  {rank=same; analy;}
  {rank=same; viz;}
}
